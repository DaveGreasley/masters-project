fn_name(fn,fn_current_function).
% fn start
fn_bb_nr(fn,3).
fn_edge_nr(fn,2).
bb_p(bb2).
% bb start
bb_freq(bb2,10000).
edge_src(ed0,bb0).
edge_dest(ed0,bb2).
edge_prob(ed0,100.0).
edge_flag(ed0,fallthru). 
edge_flag(ed0,exec). 
% bb end
% phi start
% phi end
bb_stmt_f(bb2,st0).
% stmt start
stmt_code(st0,gimple_assign).
stmt_num_ops(st0,2).
stmt_flag(st0,has_mem_ops).
assign_class(st0,single).
assign_subcode(st0,var_decl).
assign_lhs(st0,e0).
expr_class(e0,exceptional).
expr_code(e0,ssa_name).
type_p(e1).
expr_type(e0,e1). 
expr_class(e1,type).
expr_code(e1,integer_type).
expr_flags(e1,constant).
expr_flags(e1,public).
expr_code_len(e1,0).
expr_int_size(e1,32).
expr_code_len(e0,0).
expr_ssa_name(e0,s2).
expr_ssa_var(e0,e2).
expr_class(e2,declaration).
expr_code(e2,var_decl).
expr_type(e2,e1). 
expr_code_len(e2,0).
var_p(v0).
expr_var(e2,v0). 
assign_rhs1(st0,e3).
expr_class(e3,declaration).
expr_code(e3,var_decl).
expr_flags(e3,adddresable).
expr_flags(e3,static).
expr_flags(e3,public).
expr_type(e3,e1). 
expr_code_len(e3,0).
var_p(v1).
expr_var(e3,v1). 
% stmt end
bb_stmt_n(bb2,st0,st1).
% stmt start
stmt_code(st1,gimple_call).
stmt_num_ops(st1,7).
stmt_flag(st1,has_mem_ops).
call_num_args(st1,4).
call_lhs(st1,e4).
call_fn(st1,e5).
expr_class(e5,expression).
expr_code(e5,addr_expr).
expr_flags(e5,constant).
type_p(e6).
expr_type(e5,e6). 
expr_class(e6,type).
expr_code(e6,pointer_type).
type_p(e7).
expr_type(e6,e7). 
expr_class(e7,type).
expr_code(e7,function_type).
expr_type(e7,e1). 
expr_code_len(e7,0).
expr_code_len(e6,0).
expr_code_len(e5,1).
expr_op_f(e5,e8).
expr_class(e8,declaration).
expr_code(e8,function_decl).
expr_flags(e8,adddresable).
expr_flags(e8,static).
expr_flags(e8,nothrow).
expr_flags(e8,public).
expr_type(e8,e7). 
expr_code_len(e8,0).
var_p(v2).
expr_var(e8,v2). 
call_treturn(st1,e9).
expr_class(e9,type).
expr_code(e9,integer_type).
expr_flags(e9,constant).
expr_flags(e9,public).
expr_code_len(e9,0).
expr_int_size(e9,32).
call_arg(st1,e10).
expr_class(e10,constant).
expr_code(e10,integer_cst).
expr_flags(e10,constant).
expr_type(e10,e1). 
expr_code_len(e10,0).
expr_intcst_val(e10,0).
call_arg(st1,e11).
expr_class(e11,exceptional).
expr_code(e11,ssa_name).
expr_type(e11,e1). 
expr_code_len(e11,0).
expr_ssa_name(e11,s2).
expr_ssa_var(e11,e12).
expr_class(e12,declaration).
expr_code(e12,var_decl).
expr_type(e12,e1). 
expr_code_len(e12,0).
expr_var(e12,v0). 
call_arg(st1,e13).
expr_class(e13,constant).
expr_code(e13,integer_cst).
expr_flags(e13,constant).
expr_type(e13,e1). 
expr_code_len(e13,0).
expr_intcst_val(e13,0).
call_arg(st1,e14).
expr_class(e14,exceptional).
expr_code(e14,ssa_name).
expr_type(e14,e1). 
expr_code_len(e14,0).
expr_ssa_name(e14,s2).
expr_ssa_var(e14,e15).
expr_class(e15,declaration).
expr_code(e15,var_decl).
expr_type(e15,e1). 
expr_code_len(e15,0).
expr_var(e15,v0). 
% stmt end
bb_stmt_n(bb2,st1,st2).
% stmt start
stmt_code(st2,gimple_return).
stmt_num_ops(st2,1).
stmt_flag(st2,has_mem_ops).
% stmt end
% fn end
